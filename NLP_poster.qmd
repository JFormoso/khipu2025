---
title: "Consideraciones sobre la Ciencia Abierta de investigadores e investigadoras del sur global : un análisis desde herramientas de NLP"
author: "Formoso, J., Nanton, M. C., Loto, P. A."
format: html
editor: visual
execute: 
  echo: true
embed-resources: true
---

```{r}
# Paquetes
library(tidyverse)
library(tidytext)
library(googlesheets4)
library(topicmodels)
library(tm)
library(udpipe)
library(syuzhet)



```

```{r}

# Datos
datos <- read_sheet("1ZaaZFXhc9KfQgpWehNpl6Qyam-49O2nHS786fKrXFCw", sheet = "info_inscriptos")
```

## Procesamientos base

Selección de preguntas abiertas

```{r}
texto_libre <- datos %>%  
  select(interes_ES,
         barreras_ES,
         publico_general_ES)
```

### Tokenización

```{r}
# tok_interes: campo con interes por ciencia abierta 


tok_interes <- texto_libre %>%
  select(interes_ES) %>% 
  unnest_tokens(word, interes_ES) %>% 
  filter(!word %in% stopwords("es")) %>% 
  mutate(document = "interes_ES")

tok_interes %>% glimpse()
```

```{r}
# tok_barreras: campo con barreras encontradas en ciencia abierta 

tok_barreras <- texto_libre %>%
  select(barreras_ES) %>% 
  unnest_tokens(word, barreras_ES) %>% 
  filter(!word %in% stopwords("es")) %>% 
  mutate(document = "barreras_ES")

tok_barreras %>% glimpse()
```

```{r}

# tok_public:campo con incidencia de ciencia abierta en publico en general

tok_public <- texto_libre %>%
  select(publico_general_ES) %>% 
  unnest_tokens(word, publico_general_ES)  %>% 
  filter(!word %in% stopwords("es")) %>% 
  mutate(document = "publico_general_ES")


tok_public %>% glimpse()
```

```{r}
# todo el texto junto
tok_all <- texto_libre %>% 
  pivot_longer(cols = interes_ES:publico_general_ES,
               values_to = "text") %>% 
  rename(document = name) %>% 
  unnest_tokens(word, text) %>% 
  filter(!word %in% stopwords("es"))

tok_all %>% glimpse()
```

### Conteo de frecuencias

```{r}
tok_c_interes <- tok_interes %>% count(document, word)

tok_c_barreras <- tok_barreras %>% count(document, word)

tok_c_public <- tok_public %>% count(document, word)

tok_c_all <- tok_all %>% count(document, word)
```

### DTM

```{r}
dtm_interes <- tok_c_interes %>% 
  cast_dtm(document, word, n)

dtm_barreras <- tok_c_barreras %>% 
  cast_dtm(document, word, n)

dtm_public <- tok_c_public %>% 
  cast_dtm(document, word, n)

dtm_all <- tok_c_all %>% 
  cast_dtm(document, word, n)
```

## Análisis de frecuencias

```{r}

tok_c_all_sw <- tok_c_all |>
  filter(!word %in% stopwords("es")) |>
  arrange(desc(n))

total_words <- tok_c_all_sw %>% 
  group_by(document) %>% 
  summarize(total = sum(n))

tok_c_all_sw <- left_join(tok_c_all_sw, total_words)

tok_c_all_sw
```

```{r}
tok_c_all_sw |>
  ggplot(aes(n/total, fill = document)) +
  geom_histogram(show.legend = FALSE) +
  xlim(NA, 0.0009) +
  facet_wrap(~document, ncol = 2, scales = "free_y")
```

```{r}

freq_by_rank <- tok_c_all_sw %>% 
  group_by(document) %>% 
  mutate(rank = row_number(), 
         term_frequency = n/total) %>%
  ungroup()

freq_by_rank
```

```{r}
freq_by_rank %>% 
  ggplot(aes(rank, term_frequency, color = document)) + 
  geom_line(linewidth = 1.1, alpha = 0.8, show.legend = FALSE) + 
  scale_x_log10() +
  scale_y_log10()
```

```{r}
rank_subset <- freq_by_rank %>% 
  filter(rank < 500,
         rank > 10)

lm(log10(term_frequency) ~ log10(rank), data = rank_subset)
```

```{r}
freq_by_rank %>% 
  ggplot(aes(rank, term_frequency, color = document)) + 
  geom_abline(intercept = -0.62, slope = -1.1, 
              color = "gray50", linetype = 2) +
  geom_line(linewidth = 1.1, alpha = 0.8, show.legend = FALSE) + 
  scale_x_log10() +
  scale_y_log10()
```

```{r}
tf_idf <- tok_c_all_sw %>%
  bind_tf_idf(word, document, n)

tf_idf |>
  select(-total) |>
  arrange(desc(tf_idf))
```

```{r}
tf_idf %>%
  group_by(document) %>%
  slice_max(tf_idf, n = 15) %>%
  ungroup() %>%
  ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = document)) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~document, ncol = 2, scales = "free") +
  labs(x = "tf-idf", y = NULL)
```

## Análisis de sentimiento

```{r}

tok_all <- texto_libre %>%
  pivot_longer(cols = interes_ES:publico_general_ES,
               values_to = "text") %>%
  rename(document = name) %>%
  unnest_tokens(word, text)

tok_all %>% glimpse()
```

```{r}
# elimino las stopwords

tok_all_sin_sw <- tok_all |>
  filter(!word %in% stopwords("es")) 

tok_all_sin_sw %>% glimpse()

```

```{r}
palabra.df <- as.vector(tok_all_sin_sw$word)
palabra.df
```

```{r}
# La función get_nrc_sentiments() nos permite obtener léxicos de sentimientos específicos

sentimientos_df <- get_nrc_sentiment(palabra.df, lang="spanish")
sentimientos_df
```

```{r}

#Unimos sentimientos_df con el vector de palabras  para ver como
#trabajó la función get_nrc_sentiment en cada una de ellas


df2 <- cbind(palabra.df, sentimientos_df)
head(df2)

#Creamos un data frame en el cual las filas serán las emociones
#y las columnas los puntajes totales

#Empezamos transponiendo sentimientos_df
emocion.df3 <- data.frame(t(sentimientos_df))
emocion.df3

#Sumamos los puntajes de cada emocion
emocion.df3 <- data.frame(rowSums(emocion.df3))

#Nombramos la columna de puntajes como total
names(emocion.df3)[1] <- "total"



#Dado que las emociones son los nombres de las filas y no una variable
#transformamos el data frame para incluirlas dentro
emocion.df3 <- cbind("sentimiento" = rownames(emocion.df3), emocion.df3)
emocion.df3
#Quitamos el nombre de las filas
rownames(emocion.df3) <- NULL

#Verificamos el data frame
print(emocion.df3)
emocion.df3



```

```{r}
library("RColorBrewer")

sentimientos1 <- ggplot(emocion.df3[1:8,],
                        aes(x = sentimiento,
                            y = total, fill = sentimiento)) + 
  geom_bar(stat = "identity") +
  labs(title = "Análisis de sentimiento",
       x = "Sentimiento", y = " ")+
  geom_text(aes(label = total),
            vjust = 1.5, color = "black",
            size =4) +
  theme_minimal() + scale_fill_brewer(palette = "Paired") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text = element_text(size=12),
        axis.title = element_text(size=14,face = "bold"),
        title = element_text(size=20,face = "bold"),
        legend.position = "none") 
        
  
sentimientos1 

```


## Modelado de tópicos

DTM

```{r}
lda_all <- LDA(dtm_all, k = 2, control = list(seed = 1234))
topics_all <- tidy(lda_all)
```

```{r}
all_top_terms <- topics_all %>%
  group_by(topic) %>%
  slice_max(beta, n = 10) %>% 
  ungroup() %>%
  arrange(topic, -beta)

all_top_terms %>%
  mutate(term = reorder_within(term, beta, topic)) %>%
  ggplot(aes(beta, term, fill = factor(topic))) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~ topic, scales = "free") +
  scale_y_reordered()
```

```{r}
beta_wide_all <- topics_all %>%
  mutate(topic = paste0("topic", topic)) %>%
  pivot_wider(names_from = topic, values_from = beta) %>% 
  filter(topic1 > .001 | topic2 > .001) %>%
  mutate(log_ratio = log2(topic2 / topic1))
beta_wide_all
```

#### Barreras

```{r}
lda_barreras <- LDA(dtm_barreras, k = 2, control = list(seed = 1234))
topics_barreras <- tidy(lda_barreras)
```

```{r}
barreras_top_terms <- topics_barreras %>%
  group_by(topic) %>%
  slice_max(beta, n = 10) %>% 
  ungroup() %>%
  arrange(topic, -beta)

barreras_top_terms %>%
  mutate(term = reorder_within(term, beta, topic)) %>%
  ggplot(aes(beta, term, fill = factor(topic))) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~ topic, scales = "free") +
  scale_y_reordered()
```

```{r}
beta_wide_barreras <- topics_barreras %>%
  mutate(topic = paste0("topic", topic)) %>%
  pivot_wider(names_from = topic, values_from = beta) %>% 
  filter(topic1 > .001 | topic2 > .001) %>%
  mutate(log_ratio = log2(topic2 / topic1))
beta_wide_barreras
```

#### Interes

```{r}
lda_interes <- LDA(dtm_interes, k = 2, control = list(seed = 1234))
topics_interes <- tidy(lda_interes)
```

```{r}
interes_top_terms <- topics_interes %>%
  group_by(topic) %>%
  slice_max(beta, n = 10) %>% 
  ungroup() %>%
  arrange(topic, -beta)


#### DTM

interes_top_terms %>%
  mutate(term = reorder_within(term, beta, topic)) %>%
  ggplot(aes(beta, term, fill = factor(topic))) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~ topic, scales = "free") +
  scale_y_reordered()
```

```{r}
beta_wide_interes <- topics_interes %>%
  mutate(topic = paste0("topic", topic)) %>%
  pivot_wider(names_from = topic, values_from = beta) %>% 
  filter(topic1 > .001 | topic2 > .001) %>%
  mutate(log_ratio = log2(topic2 / topic1))
beta_wide_interes
```

#### Public

```{r}
lda_public <- LDA(dtm_public, k = 2, control = list(seed = 1234))
topics_public <- tidy(lda_public)
```

```{r}
public_top_terms <- topics_public %>%
  group_by(topic) %>%
  slice_max(beta, n = 10) %>% 
  ungroup() %>%
  arrange(topic, -beta)

public_top_terms %>%
  mutate(term = reorder_within(term, beta, topic)) %>%
  ggplot(aes(beta, term, fill = factor(topic))) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~ topic, scales = "free") +
  scale_y_reordered()
```

```{r}
beta_wide_public <- topics_public %>%
  mutate(topic = paste0("topic", topic)) %>%
  pivot_wider(names_from = topic, values_from = beta) %>% 
  filter(topic1 > .001 | topic2 > .001) %>%
  mutate(log_ratio = log2(topic2 / topic1))
beta_wide_public
```

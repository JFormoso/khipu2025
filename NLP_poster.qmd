---
title: "Consideraciones sobre la Ciencia Abierta de investigadores e investigadoras del sur global : un análisis desde herramientas de NLP"
author: "Formoso, J., Nanton, M. C., Loto, P. A."
format: html
editor: visual
execute: 
  echo: true
embed-resources: true
---

```{r}
# Paquetes
library(tidyverse)
library(tidytext)
library(googlesheets4)
library(topicmodels)
library(tm)

# Datos
datos <- read_sheet("1ZaaZFXhc9KfQgpWehNpl6Qyam-49O2nHS786fKrXFCw", sheet = "info_inscriptos")
```
## Procesamientos base

Selección de preguntas abiertas

```{r}
texto_libre <- datos %>%  
  select(interes_ES,
         barreras_ES,
         publico_general_ES)
```


### Tokenización

```{r}
tok_interes <- texto_libre %>%
  select(interes_ES) %>% 
  unnest_tokens(word, interes_ES) %>% 
  mutate(document = "interes_ES")
```

```{r}
tok_barreras <- texto_libre %>%
  select(barreras_ES) %>% 
  unnest_tokens(word, barreras_ES) %>% 
  mutate(document = "barreras_ES")
```

```{r}
tok_public <- texto_libre %>%
  select(publico_general_ES) %>% 
  unnest_tokens(word, publico_general_ES)  %>% 
  mutate(document = "publico_general_ES")
```

```{r}
tok_all <- texto_libre %>% 
  pivot_longer(cols = interes_ES:publico_general_ES,
               values_to = "text") %>% 
  rename(document = name) %>% 
  unnest_tokens(word, text)
```


### Conteo de frecuencias

```{r}
tok_c_interes <- tok_interes %>% count(document, word)

tok_c_barreras <- tok_barreras %>% count(document, word)

tok_c_public <- tok_public %>% count(document, word)

tok_c_all <- tok_all %>% count(document, word)
```


### DTM

```{r}
dtm_interes <- tok_c_interes %>% 
  cast_dtm(document, word, n)

dtm_barreras <- tok_c_barreras %>% 
  cast_dtm(document, word, n)

dtm_public <- tok_c_public %>% 
  cast_dtm(document, word, n)

dtm_all <- tok_c_all %>% 
  cast_dtm(document, word, n)
```


## Análisis de frecuencias

```{r}
variable_palabras <- texto_libre |>
  mutate(id = 1:nrow(texto_libre)) |>
  pivot_longer(cols = -id,
               names_to = "variable",
               values_to = "text") |>
  unnest_tokens(word, text) |>
  filter(!word %in% stopwords("es")) |>
  count(variable, word, sort = TRUE)

total_palabras <- variable_palabras %>% 
  group_by(variable) %>% 
  summarize(total = sum(n))

variable_palabras <- left_join(variable_palabras, total_palabras)

variable_palabras

```

```{r}
variable_palabras |>
  ggplot(aes(n/total, fill = variable)) +
  geom_histogram(show.legend = FALSE) +
  xlim(NA, 0.0009) +
  facet_wrap(~variable, ncol = 2, scales = "free_y")
```
```{r}
freq_by_rank <- variable_palabras %>% 
  group_by(variable) %>% 
  mutate(rank = row_number(), 
         term_frequency = n/total) %>%
  ungroup()

freq_by_rank
```
```{r}
freq_by_rank %>% 
  ggplot(aes(rank, term_frequency, color = variable)) + 
  geom_line(linewidth = 1.1, alpha = 0.8, show.legend = FALSE) + 
  scale_x_log10() +
  scale_y_log10()
```

```{r}
rank_subset <- freq_by_rank %>% 
  filter(rank < 500,
         rank > 10)

lm(log10(term_frequency) ~ log10(rank), data = rank_subset)
```

```{r}
freq_by_rank %>% 
  ggplot(aes(rank, term_frequency, color = variable)) + 
  geom_abline(intercept = -0.62, slope = -1.1, 
              color = "gray50", linetype = 2) +
  geom_line(linewidth = 1.1, alpha = 0.8, show.legend = FALSE) + 
  scale_x_log10() +
  scale_y_log10()
```
```{r}
tf_idf <- variable_palabras %>%
  bind_tf_idf(word, variable, n)

tf_idf |>
  select(-total) |>
  arrange(desc(tf_idf))
```
```{r}
tf_idf %>%
  group_by(variable) %>%
  slice_max(tf_idf, n = 15) %>%
  ungroup() %>%
  ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = variable)) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~variable, ncol = 2, scales = "free") +
  labs(x = "tf-idf", y = NULL)
```



## Análisis de sentimiento

## Modelado de tópicos



DTM

```{r}
dt_completo

dt_interes

dt_barreras

dt_publico
```

### LDA

Requiere formato tidy: a table with one-token-per-document-per-row, such as is constructed by the [`unnest_tokens()`](https://juliasilge.github.io/tidytext/reference/unnest_tokens.html) function



#### DTM

```{r}
dmt_interes <- tok_interes %>% 
  cast_dtm()


```
